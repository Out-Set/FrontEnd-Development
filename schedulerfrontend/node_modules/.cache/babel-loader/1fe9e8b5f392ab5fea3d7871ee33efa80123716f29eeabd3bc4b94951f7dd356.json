{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-957c9522\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"master\"\n};\nconst _hoisted_2 = {\n  class: \"heading\"\n};\nconst _hoisted_3 = {\n  style: {\n    \"margin-top\": \"15px\"\n  }\n};\nconst _hoisted_4 = [\"value\"];\nconst _hoisted_5 = {\n  class: \"setAndViewLogs\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"main\"\n}, \"Set Cron Value\", -1 /* HOISTED */));\nconst _hoisted_7 = [\"value\"];\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"main\"\n}, \"Stop and Start\", -1 /* HOISTED */));\nconst _hoisted_9 = [\"value\"];\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"main\"\n}, \"Common Logs\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_createElementVNode(\"h2\", _hoisted_2, _toDisplayString(_ctx.name), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_3, [_createTextVNode(\" Select Task Type \"), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.taskType = $event),\n    onChange: _cache[1] || (_cache[1] = $event => _ctx.fetchTaskNames()),\n    style: {\n      \"width\": \"100px\"\n    }\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.taskTypes, taskType => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: taskType,\n      value: taskType\n    }, _toDisplayString(taskType), 9 /* TEXT, PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelSelect, _ctx.taskType]])]), _createElementVNode(\"div\", _hoisted_5, [_createCommentVNode(\" Set Expression \"), _createElementVNode(\"div\", null, [_hoisted_6, _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.taskName = $event),\n    style: {\n      \"width\": \"100px\"\n    }\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.taskNames, taskName => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: taskName,\n      value: taskName\n    }, _toDisplayString(taskName), 9 /* TEXT, PROPS */, _hoisted_7);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, _ctx.taskName]]), _createTextVNode(\"  \"), _createVNode(_component_router_link, {\n    to: \"/scheduleTask\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"button\", {\n      onClick: _cache[3] || (_cache[3] = $event => _ctx.setTaskToLS()),\n      class: _normalizeClass([\"mb-5\", {\n        active: this.$route.path === '/scheduleTask'\n      }]),\n      \"aria-current\": \"page\"\n    }, \"Set \", 2 /* CLASS */)]),\n\n    _: 1 /* STABLE */\n  })]), _createCommentVNode(\" Stop prog Execution \"), _createElementVNode(\"div\", null, [_hoisted_8, _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => this.taskNames[0] = $event),\n    style: {\n      \"width\": \"100px\"\n    }\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.taskNames, taskName => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: taskName,\n      value: taskName\n    }, _toDisplayString(taskName), 9 /* TEXT, PROPS */, _hoisted_9);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, this.taskNames[0]]]), _createTextVNode(\"  \"), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = $event => _ctx.stopTask(this.taskName))\n  }, \"Stop\"), _createTextVNode(\"  \"), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = $event => _ctx.startTask(this.taskName))\n  }, \"Start\")]), _createCommentVNode(\" View Logs \"), _createElementVNode(\"div\", null, [_hoisted_10, _createVNode(_component_router_link, {\n    to: \"/commonLogs\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"button\", {\n      class: _normalizeClass({\n        active: this.$route.path === '/commonLogs'\n      }),\n      \"aria-current\": \"page\"\n    }, \"View \", 2 /* CLASS */)]),\n\n    _: 1 /* STABLE */\n  })])])]);\n}","map":{"version":3,"names":["class","style","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","_ctx","name","_hoisted_3","taskType","$event","onChange","_cache","fetchTaskNames","_Fragment","_renderList","taskTypes","key","value","_hoisted_4","_hoisted_5","_createCommentVNode","_hoisted_6","taskName","taskNames","_hoisted_7","_createVNode","_component_router_link","to","onClick","setTaskToLS","_normalizeClass","active","$route","path","_hoisted_8","_hoisted_9","stopTask","startTask","_hoisted_10"],"sources":["C:\\Users\\admin\\Desktop\\Working On\\FrontEnd-Development\\schedulerfrontend\\src\\components\\home.vue"],"sourcesContent":["<template>\r\n    <div class=\"master\">\r\n        <div>\r\n            <h2 class=\"heading\">{{ name }}</h2>\r\n        </div>\r\n\r\n        <div style=\"margin-top: 15px\">\r\n            Select Task Type\r\n            <select v-model=\"taskType\" @change=\"fetchTaskNames()\" style=\"width: 100px;\">\r\n                <option v-for=\"taskType in taskTypes\" :key=\"taskType\" :value=\"taskType\">{{ taskType }}</option>\r\n            </select>\r\n        </div>\r\n\r\n        <div class=\"setAndViewLogs\">\r\n\r\n            <!-- Set Expression -->\r\n            <div>\r\n                <h3 class=\"main\">Set Cron Value</h3>\r\n                <select v-model=\"taskName\" style=\"width: 100px;\">\r\n                    <option v-for=\"taskName in taskNames\" :key=\"taskName\" :value=\"taskName\">{{ taskName }}</option>\r\n                </select>&nbsp;\r\n\r\n                <router-link to=\"/scheduleTask\">\r\n                    <button v-on:click=\"setTaskToLS()\" class=\"mb-5\"\r\n                        :class=\"{ active: this.$route.path === '/scheduleTask' }\" aria-current=\"page\">Set\r\n                    </button>\r\n                </router-link>\r\n            </div>\r\n\r\n            <!-- Stop prog Execution -->\r\n            <div>\r\n                <h3 class=\"main\">Stop and Start</h3>\r\n                <select v-model=\"this.taskNames[0]\" style=\"width: 100px;\">\r\n                    <option v-for=\"taskName in taskNames\" :key=\"taskName\" :value=\"taskName\">{{ taskName }}</option>\r\n                </select>&nbsp;\r\n                <button v-on:click=\"stopTask(this.taskName)\">Stop</button>&nbsp;\r\n                <button v-on:click=\"startTask(this.taskName)\">Start</button>\r\n            </div>\r\n\r\n            <!-- View Logs -->\r\n            <div>\r\n                <h3 class=\"main\">Common Logs</h3>\r\n                <router-link to=\"/commonLogs\">\r\n                    <button :class=\"{ active: this.$route.path === '/commonLogs' }\" aria-current=\"page\">View\r\n                    </button>\r\n                </router-link>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    name: \"homePage\",\r\n    data() {\r\n        return {\r\n            name: \"Cron Dashboard\",\r\n\r\n            taskTypes: ['proc', 'api', 'method'],\r\n            taskType: 'proc',\r\n\r\n            taskNames: [],\r\n            taskName: '',\r\n\r\n            taskStartStop: '',\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        setTaskToLS() {\r\n            localStorage.setItem('taskName', this.taskName);\r\n        },\r\n\r\n        stopTask(taskName) {\r\n            console.log('task-name: ', taskName);\r\n            axios.post('http://localhost:8082/tasks/stop?task=' + taskName) // Dynamic-Cron\r\n                .then((response) => {\r\n                    console.log(\"Response form Backend: \", response);\r\n                    this.logs = response.data\r\n                })\r\n                .catch((error) => {\r\n                    // Handle the error\r\n                    console.log(\"Error Occured!\", error);\r\n                })\r\n        },\r\n\r\n        startTask(taskName) {\r\n            console.log('task-name: ', taskName);\r\n            axios.post('http://localhost:8082/tasks/startAtInit?task=' + taskName) // Dynamic-Cron\r\n                .then((response) => {\r\n                    console.log(\"Response form Backend: \", response);\r\n                    this.logs = response.data\r\n                })\r\n                .catch((error) => {\r\n                    // Handle the error\r\n                    console.log(\"Error Occured!\", error);\r\n                })\r\n        },\r\n\r\n        fetchTaskNames() {\r\n            // Fetch task names from an API or perform some other action\r\n            console.log('Task type selected:', this.taskType);\r\n            axios.get('http://localhost:8082/scheduledTask/findTaskName/'+this.taskType) // Dynamic-Cron\r\n                .then((response) => {\r\n                    console.log(\"Response form Backend: \", response);\r\n                    this.taskNames = response.data\r\n                    this.taskName = this.taskNames[0]\r\n                    this.taskStartStop: this.taskNames[0],\r\n                })\r\n                .catch((error) => {\r\n                    // Handle the error\r\n                    console.log(\"Error Occured!\", error);\r\n                })\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.master {\r\n    margin-top: 0px;\r\n    padding-top: 0px;\r\n    background: lightblue;\r\n    height: 660px;\r\n}\r\n\r\n.heading {\r\n    height: 40px;\r\n    background: lightcoral;\r\n    padding-top: 13px;\r\n    padding-left: 16px;\r\n}\r\n\r\n.main {\r\n    text-decoration: underline;\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.setAndViewLogs {\r\n    display: grid;\r\n    grid-template-columns: auto auto auto;\r\n    margin-top: 50px;\r\n}\r\n\r\nselect {\r\n    padding: 3px 10px;\r\n}\r\n\r\nbutton {\r\n    border: none;\r\n    border-radius: 3px;\r\n    margin-bottom: 10px;\r\n    padding: 4px 20px;\r\n}\r\n\r\nbutton:hover {\r\n    background: #1397AA;\r\n    color: white;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}