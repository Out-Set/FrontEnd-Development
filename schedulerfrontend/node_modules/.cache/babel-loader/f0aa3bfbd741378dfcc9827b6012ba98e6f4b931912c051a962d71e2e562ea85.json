{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ea9174a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"heading\"\n};\nconst _hoisted_2 = {\n  class: \"filter\"\n};\nconst _hoisted_3 = [\"value\"];\nconst _hoisted_4 = {\n  class: \"allDataDiv\",\n  style: {}\n};\nconst _hoisted_5 = {\n  class: \"table\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"LogID\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Task Type\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Task Name\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"LAST START TIME\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"NEXT RUN TIME\"), /*#__PURE__*/_createCommentVNode(\" <th scope=\\\"col\\\">LAST RUN DURATION</th> \")])], -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"footerDiv mt-1\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_spinner = _resolveComponent(\"spinner\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [$data.loader ? (_openBlock(), _createBlock(_component_spinner, {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", null, [_createElementVNode(\"div\", null, [_createElementVNode(\"h3\", _hoisted_1, _toDisplayString($data.log), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_2, [_createTextVNode(\"Task Name \"), _withDirectives(_createElementVNode(\"select\", {\n    name: \"logs\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.filterFlag = $event)\n  }, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.taskName = $event),\n    style: {\n      \"width\": \"100px\"\n    }\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.taskNames, taskName => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: taskName,\n      value: taskName\n    }, _toDisplayString(taskName), 9 /* TEXT, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, _ctx.taskName]])], 512 /* NEED_PATCH */), [[_vModelSelect, _ctx.filterFlag]])]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"table\", _hoisted_5, [_hoisted_6, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.logs, data => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: data.jobName\n    }, [_createElementVNode(\"td\", null, _toDisplayString(data.logID), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(data.taskType), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(data.taskName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.dateFormat(data.startTime)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.dateFormat(data.nextStartTime)), 1 /* TEXT */), _createCommentVNode(\" <td>{{ data.lastRunDuration }}</td> \")]);\n  }), 128 /* KEYED_FRAGMENT */))])])]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => _ctx.$router.back()),\n    class: \"btn btn-secondary btn-sm mt-5\"\n  }, \"Back\")])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","style","_createElementVNode","scope","_createCommentVNode","$data","loader","_createBlock","_component_spinner","key","_hoisted_1","_toDisplayString","log","_hoisted_2","name","_ctx","filterFlag","$event","taskName","_createElementBlock","_Fragment","_renderList","taskNames","value","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","logs","data","jobName","logID","taskType","$options","dateFormat","startTime","nextStartTime","_hoisted_7","onClick","_cache","$router","back"],"sources":["C:\\Users\\admin\\Desktop\\Working On\\FrontEnd-Development\\schedulerfrontend\\src\\components\\commonLogs.vue"],"sourcesContent":["<template>\r\n    <spinner v-if=\"loader\"></spinner>\r\n\r\n    <div>\r\n        <div>\r\n            <h3 class=\"heading\">{{ log }}</h3>\r\n        </div>\r\n\r\n        <div class=\"filter\">Task Name\r\n            <select name=\"logs\" v-model=\"filterFlag\">\r\n                <select v-model=\"taskName\" style=\"width: 100px;\">\r\n                    <option v-for=\"taskName in taskNames\" :key=\"taskName\" :value=\"taskName\">{{ taskName }}</option>\r\n                </select>\r\n            </select>\r\n        </div>\r\n\r\n        <div class=\"allDataDiv\" style=\"\">\r\n            <table class=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">LogID</th>\r\n                        <th scope=\"col\">Task Type</th>\r\n                        <th scope=\"col\">Task Name</th>\r\n                        <th scope=\"col\">LAST START TIME</th>\r\n                        <th scope=\"col\">NEXT RUN TIME</th>\r\n                        <!-- <th scope=\"col\">LAST RUN DURATION</th> -->\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr v-for=\"data in (logs)\" :key=\"data.jobName\">\r\n                        <td>{{ data.logID }}</td>\r\n                        <td>{{ data.taskType }}</td>\r\n                        <td>{{ data.taskName }}</td>\r\n                        <td> {{ dateFormat(data.startTime) }} </td>\r\n                        <td>{{ dateFormat(data.nextStartTime) }}</td>\r\n                        <!-- <td>{{ data.lastRunDuration }}</td> -->\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n        <div class=\"footerDiv mt-1\">\r\n            <button @click=\"$router.back()\" class=\"btn btn-secondary btn-sm mt-5\">Back</button>\r\n        </div>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nexport default {\r\n    name: \"commonLogs\",\r\n    data() {\r\n        return {\r\n            log: 'Common-Logs',\r\n            logs: [],\r\n\r\n            loader: true\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n        axios.get('http://localhost:8082/logs/getCommonLogs') // Dynamic-Cron\r\n            // axios.get('http://localhost:8081/getCron1Logs') // Scheduler\r\n            .then((response) => {\r\n                console.log(\"Response form Backend: \", response);\r\n                this.logs = response.data\r\n                this.loader = false\r\n            })\r\n            .catch((error) => {\r\n                // Handle the error\r\n                console.log(\"Error Occured!\", error);\r\n            })\r\n    },\r\n\r\n    methods: {\r\n        dateFormat(date) {\r\n            return moment(date).format('Do MMM YYYY, h:mm:ss a');\r\n        },\r\n\r\n    }\r\n};\r\n\r\n</script>\r\n  \r\n<style scoped>\r\n\r\n.filter {\r\n    text-align: right;\r\n    margin: 5px;\r\n    justify-content: right;\r\n    margin-right: 0px;\r\n}\r\n\r\n.allDataDiv {\r\n    padding: auto;\r\n    width: 100%;\r\n    height: 410px;\r\n    overflow: scroll;\r\n}\r\n\r\n.table {\r\n    width: 1275px;\r\n}\r\n\r\nthead tr th {\r\n    background-color: lightskyblue;\r\n    font-size: 14px;\r\n}\r\n\r\ntbody tr td {\r\n    font-size: 12px;\r\n}\r\n\r\nthead {\r\n    position: sticky;\r\n    top: 0;\r\n}\r\n\r\n.heading {\r\n    height: 40px;\r\n    background: lightcoral;\r\n    padding-top: 15px;\r\n    margin-bottom: 0px;\r\n}\r\n\r\n.footerDiv {\r\n    width: 100%;\r\n    height: 25px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    background-color: #c9c9c9;\r\n}\r\n\r\n@media (max-width: 767px) {\r\n    .masterDiv {\r\n        margin-left: 1%;\r\n    }\r\n}\r\n</style>"],"mappings":";;;EAKgBA,KAAK,EAAC;AAAS;;EAGlBA,KAAK,EAAC;AAAQ;;;EAQdA,KAAK,EAAC,YAAY;EAACC,KAAQ,EAAR;;;EACbD,KAAK,EAAC;AAAO;gEAChBE,mBAAA,CASQ,gB,aARJA,mBAAA,CAOK,a,aANDA,mBAAA,CAA0B;EAAtBC,KAAK,EAAC;AAAK,GAAC,OAAK,G,aACrBD,mBAAA,CAA8B;EAA1BC,KAAK,EAAC;AAAK,GAAC,WAAS,G,aACzBD,mBAAA,CAA8B;EAA1BC,KAAK,EAAC;AAAK,GAAC,WAAS,G,aACzBD,mBAAA,CAAoC;EAAhCC,KAAK,EAAC;AAAK,GAAC,iBAAe,G,aAC/BD,mBAAA,CAAkC;EAA9BC,KAAK,EAAC;AAAK,GAAC,eAAa,G,aAC7BC,mBAAA,8CAA+C,C;;EAgB1DJ,KAAK,EAAC;AAAgB;;;6DAxChBK,KAAA,CAAAC,MAAM,I,cAArBC,YAAA,CAAiCC,kBAAA;IAAAC,GAAA;EAAA,M,mCAEjCP,mBAAA,CAyCM,cAxCFA,mBAAA,CAEM,cADFA,mBAAA,CAAkC,MAAlCQ,UAAkC,EAAAC,gBAAA,CAAXN,KAAA,CAAAO,GAAG,iB,GAG9BV,mBAAA,CAMM,OANNW,UAMM,G,iBANc,YAChB,G,gBAAAX,mBAAA,CAIS;IAJDY,IAAI,EAAC,MAAM;+DAAUC,IAAA,CAAAC,UAAU,GAAAC,MAAA;sBACnCf,mBAAA,CAES;+DAFQa,IAAA,CAAAG,QAAQ,GAAAD,MAAA;IAAEhB,KAAqB,EAArB;MAAA;IAAA;yBACvBkB,mBAAA,CAA+FC,SAAA,QAAAC,WAAA,CAApEN,IAAA,CAAAO,SAAS,EAArBJ,QAAQ;yBAAvBC,mBAAA,CAA+F;MAAxDV,GAAG,EAAES,QAAQ;MAAGK,KAAK,EAAEL;wBAAaA,QAAQ,wBAAAM,UAAA;2EADtET,IAAA,CAAAG,QAAQ,E,4CADAH,IAAA,CAAAC,UAAU,E,KAO3Cd,mBAAA,CAuBM,OAvBNuB,UAuBM,GAtBFvB,mBAAA,CAqBQ,SArBRwB,UAqBQ,GApBJC,UASQ,EACRzB,mBAAA,CASQ,iB,kBARJiB,mBAAA,CAOKC,SAAA,QAAAC,WAAA,CAPehB,KAAA,CAAAuB,IAAI,EAAbC,IAAI;yBAAfV,mBAAA,CAOK;MAPuBV,GAAG,EAAEoB,IAAI,CAACC;QAClC5B,mBAAA,CAAyB,YAAAS,gBAAA,CAAlBkB,IAAI,CAACE,KAAK,kBACjB7B,mBAAA,CAA4B,YAAAS,gBAAA,CAArBkB,IAAI,CAACG,QAAQ,kBACpB9B,mBAAA,CAA4B,YAAAS,gBAAA,CAArBkB,IAAI,CAACX,QAAQ,kBACpBhB,mBAAA,CAA2C,YAAAS,gBAAA,CAAnCsB,QAAA,CAAAC,UAAU,CAACL,IAAI,CAACM,SAAS,mBACjCjC,mBAAA,CAA6C,YAAAS,gBAAA,CAAtCsB,QAAA,CAAAC,UAAU,CAACL,IAAI,CAACO,aAAa,mBACpChC,mBAAA,yCAA4C,C;wCAM5DF,mBAAA,CAEM,OAFNmC,UAEM,GADFnC,mBAAA,CAAmF;IAA1EoC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAtB,MAAA,IAAEF,IAAA,CAAAyB,OAAO,CAACC,IAAI;IAAIzC,KAAK,EAAC;KAAgC,MAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}