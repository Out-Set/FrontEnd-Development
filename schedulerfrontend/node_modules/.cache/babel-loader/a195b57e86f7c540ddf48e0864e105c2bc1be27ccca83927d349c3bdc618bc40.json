{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-f8885a26\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"allDataDiv\",\n  style: {}\n};\nconst _hoisted_2 = {\n  class: \"table table-striped\",\n  style: {\n    \"width\": \"1275px\"\n  }\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"LogID\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"LAST START DATE\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"NEXT RUN DATE\"), /*#__PURE__*/_createCommentVNode(\" <th scope=\\\"col\\\">LAST RUN DURATION</th> \")])], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"h2\", null, _toDisplayString(_ctx.log), 1 /* TEXT */), _createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"table\", _hoisted_2, [_hoisted_3, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.logs, data => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: data.jobName\n    }, [_createElementVNode(\"td\", null, _toDisplayString(data.logID), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(_ctx.dateFormat(data.startTime)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(_ctx.dateFormat(data.nextStartTime)), 1 /* TEXT */), _createCommentVNode(\" <td>{{ data.lastRunDuration }}</td> \")]);\n  }), 128 /* KEYED_FRAGMENT */))])])]), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.getLogs())\n  }, \"Click\")])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","style","_createElementVNode","scope","_createCommentVNode","_toDisplayString","_ctx","log","_hoisted_1","_hoisted_2","_hoisted_3","_createElementBlock","_Fragment","_renderList","logs","data","key","jobName","logID","dateFormat","startTime","nextStartTime","onClick","_cache","$event","getLogs"],"sources":["C:\\Users\\admin\\Desktop\\Working On\\FrontEnd-Development\\schedulerfrontend\\src\\components\\cronLogs.vue"],"sourcesContent":["<template>\r\n  <h2>{{ log }}</h2>\r\n  <div>\r\n    <div class=\"allDataDiv\" style=\"\">\r\n      <table class=\"table table-striped\" style=\"width: 1275px;\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">LogID</th>\r\n            <th scope=\"col\">LAST START DATE</th>\r\n            <th scope=\"col\">NEXT RUN DATE</th>\r\n            <!-- <th scope=\"col\">LAST RUN DURATION</th> -->\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"data in (logs)\" :key=\"data.jobName\">\r\n            <td>{{ data.logID }}</td>\r\n            <td> {{ dateFormat(data.startTime) }} </td>\r\n            <td>{{ dateFormat(data.nextStartTime) }}</td>\r\n            <!-- <td>{{ data.lastRunDuration }}</td> -->\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <button v-on:click=\"getLogs()\">Click</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nexport default {\r\n  name: \"cronLogs\",\r\n  data() {\r\n    return {\r\n      log: 'cronLogs',\r\n      logs: []\r\n    }\r\n  },\r\n\r\n  mounted: {\r\n  axios.get('http://localhost:8081/dynamicSchedule/getLogs')\r\n    .then((response) => {\r\n      console.log(\"Response form Backend: \", response);\r\n      this.logs = response.data\r\n    })\r\n    .catch((error) => {\r\n      // Handle the error\r\n      console.log(\"Error Occured!\", error);\r\n      // Insert a comma here\r\n    })\r\n},\r\n\r\n  methods: {\r\n    getLogs() {\r\n      axios.get('http://localhost:8081/dynamicSchedule/getLogs')\r\n        .then((response) => {\r\n          console.log(\"Response form Backend: \", response);\r\n          this.logs = response.data\r\n        })\r\n        .catch((error) => {\r\n          // Handle the error\r\n          console.log(\"Error Occured!\", error);\r\n        });\r\n    },\r\n\r\n    dateFormat(date) {\r\n      return moment(date).format('Do MMM YYYY, h:mm:ss a');\r\n    },\r\n  }\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.allDataDiv {\r\n  width: 100%;\r\n  height: 410px;\r\n  overflow: scroll;\r\n}\r\n\r\nthead tr th {\r\n  background-color: lightskyblue;\r\n  font-size: 13px;\r\n}\r\n\r\ntbody tr td {\r\n  font-size: 12px;\r\n}\r\n\r\nthead {\r\n  position: sticky;\r\n  top: 0;\r\n}\r\n</style>"],"mappings":";;;EAGSA,KAAK,EAAC,YAAY;EAACC,KAAQ,EAAR;;;EACfD,KAAK,EAAC,qBAAqB;EAACC,KAAsB,EAAtB;IAAA;EAAA;;gEACjCC,mBAAA,CAOQ,gB,aANNA,mBAAA,CAKK,a,aAJHA,mBAAA,CAA0B;EAAtBC,KAAK,EAAC;AAAK,GAAC,OAAK,G,aACrBD,mBAAA,CAAoC;EAAhCC,KAAK,EAAC;AAAK,GAAC,iBAAe,G,aAC/BD,mBAAA,CAAkC;EAA9BC,KAAK,EAAC;AAAK,GAAC,eAAa,G,aAC7BC,mBAAA,8CAA+C,C;;;6DATzDF,mBAAA,CAAkB,YAAAG,gBAAA,CAAXC,IAAA,CAAAC,GAAG,kBACVL,mBAAA,CAuBM,cAtBJA,mBAAA,CAmBM,OAnBNM,UAmBM,GAlBJN,mBAAA,CAiBQ,SAjBRO,UAiBQ,GAhBNC,UAOQ,EACRR,mBAAA,CAOQ,iB,kBANNS,mBAAA,CAKKC,SAAA,QAAAC,WAAA,CALeP,IAAA,CAAAQ,IAAI,EAAbC,IAAI;yBAAfJ,mBAAA,CAKK;MALuBK,GAAG,EAAED,IAAI,CAACE;QACpCf,mBAAA,CAAyB,YAAAG,gBAAA,CAAlBU,IAAI,CAACG,KAAK,kBACjBhB,mBAAA,CAA2C,YAAAG,gBAAA,CAAnCC,IAAA,CAAAa,UAAU,CAACJ,IAAI,CAACK,SAAS,mBACjClB,mBAAA,CAA6C,YAAAG,gBAAA,CAAtCC,IAAA,CAAAa,UAAU,CAACJ,IAAI,CAACM,aAAa,mBACpCjB,mBAAA,yCAA4C,C;wCAMpDF,mBAAA,CAA6C;IAAhCoB,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAElB,IAAA,CAAAmB,OAAO;KAAI,OAAK,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}