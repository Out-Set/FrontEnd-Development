{"ast":null,"code":"import axios from 'axios';\nimport moment from 'moment';\nexport default {\n  name: \"commonLogs\",\n  data() {\n    return {\n      log: 'Common-Logs',\n      logs: [],\n      taskNames: [],\n      taskName: '',\n      loader: true,\n      filteredData: [],\n      taskTypeFilter: 'proc'\n    };\n  },\n  mounted() {\n    // Get list of item\n    const taskNames = JSON.parse(localStorage.getItem('taskNames'));\n    console.log('Task Names: ', taskNames);\n    this.taskNames = taskNames;\n    this.taskName = this.taskNames[0];\n    console.log('Task Names: ', this.taskNames, 'task name: ', this.taskName);\n    axios.get('http://localhost:8082/logs/getCommonLogs') // Dynamic-Cron\n    // axios.get('http://localhost:8081/getCron1Logs') // Scheduler\n    .then(response => {\n      console.log(\"Response form Backend: \", response);\n      this.logs = response.data;\n      this.loader = false;\n      this.filteredData = response.data.filter(log => log.taskType === this.taskTypeFilter);\n    }).catch(error => {\n      // Handle the error\n      console.log(\"Error Occured!\", error);\n    });\n\n    //Apply filter\n    // if (!this.taskTypeFilter) {\n    //     return this.logs;\n    // }\n    this.filteredData = this.logs.filter(log => log.taskType === this.taskTypeFilter);\n    console.log('filteredData', this.filteredData);\n  },\n  // Apply filter\n  computed: {\n    // filteredData() {\n    //     if (!this.taskTypeFilter) {\n    //         return this.logs;\n    //     }\n    //     return this.logs.filter(log => log.taskType === this.taskTypeFilter);\n    // },\n  },\n  methods: {\n    dateFormat(date) {\n      return moment(date).format('Do MMM YYYY, h:mm:ss a');\n    }\n  }\n};","map":{"version":3,"names":["axios","moment","name","data","log","logs","taskNames","taskName","loader","filteredData","taskTypeFilter","mounted","JSON","parse","localStorage","getItem","console","get","then","response","filter","taskType","catch","error","computed","methods","dateFormat","date","format"],"sources":["C:\\Users\\admin\\Desktop\\Working On\\FrontEnd-Development\\schedulerfrontend\\src\\components\\commonLogs.vue"],"sourcesContent":["<template>\r\n    <spinner v-if=\"loader\"></spinner>\r\n\r\n    <div>\r\n        <div>\r\n            <h3 class=\"heading\">{{ log }}</h3>\r\n        </div>\r\n\r\n        <div class=\"filter\">Task Name\r\n            <select v-model=\"taskName\" style=\"width: 100px;\">\r\n                <option v-for=\"taskName in taskNames\" :key=\"taskName\" :value=\"taskName\">{{ taskName }}</option>\r\n            </select>\r\n        </div>\r\n\r\n        <div class=\"allDataDiv\" style=\"\">\r\n            <table class=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">LogID</th>\r\n                        <th scope=\"col\">Task Type</th>\r\n                        <th scope=\"col\">Task Name</th>\r\n                        <th scope=\"col\">LAST START TIME</th>\r\n                        <th scope=\"col\">NEXT RUN TIME</th>\r\n                        <!-- <th scope=\"col\">LAST RUN DURATION</th> -->\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr v-for=\"data in (logs)\" :key=\"data.jobName\">\r\n                        <td>{{ data.logID }}</td>\r\n                        <td>{{ data.taskType }}</td>\r\n                        <td>{{ data.taskName }}</td>\r\n                        <td> {{ dateFormat(data.startTime) }} </td>\r\n                        <td>{{ dateFormat(data.nextStartTime) }}</td>\r\n                        <!-- <td>{{ data.lastRunDuration }}</td> -->\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n        <div class=\"footerDiv mt-1\">\r\n            <button @click=\"$router.back()\" class=\"btn btn-secondary btn-sm mt-5\">Back</button>\r\n        </div>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nexport default {\r\n    name: \"commonLogs\",\r\n    data() {\r\n        return {\r\n            log: 'Common-Logs',\r\n            logs: [],\r\n\r\n            taskNames: [],\r\n            taskName: '',\r\n\r\n            loader: true,\r\n\r\n            filteredData: [],\r\n            taskTypeFilter: 'proc',\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n        // Get list of item\r\n        const taskNames = JSON.parse(localStorage.getItem('taskNames'));\r\n        console.log('Task Names: ', taskNames);\r\n        this.taskNames = taskNames;\r\n        this.taskName = this.taskNames[0]\r\n        console.log('Task Names: ', this.taskNames, 'task name: ', this.taskName);\r\n\r\n        axios.get('http://localhost:8082/logs/getCommonLogs') // Dynamic-Cron\r\n            // axios.get('http://localhost:8081/getCron1Logs') // Scheduler\r\n            .then((response) => {\r\n                console.log(\"Response form Backend: \", response);\r\n                this.logs = response.data\r\n                this.loader = false\r\n                this.filteredData = response.data.filter(log => log.taskType === this.taskTypeFilter);\r\n            })\r\n            .catch((error) => {\r\n                // Handle the error\r\n                console.log(\"Error Occured!\", error);\r\n            })\r\n\r\n        //Apply filter\r\n        // if (!this.taskTypeFilter) {\r\n        //     return this.logs;\r\n        // }\r\n        this.filteredData = this.logs.filter(log => log.taskType === this.taskTypeFilter);\r\n        console.log('filteredData', this.filteredData);\r\n\r\n\r\n    },\r\n\r\n    // Apply filter\r\n    computed: {\r\n        // filteredData() {\r\n        //     if (!this.taskTypeFilter) {\r\n        //         return this.logs;\r\n        //     }\r\n        //     return this.logs.filter(log => log.taskType === this.taskTypeFilter);\r\n        // },\r\n    },\r\n\r\n    methods: {\r\n        dateFormat(date) {\r\n            return moment(date).format('Do MMM YYYY, h:mm:ss a');\r\n        },\r\n\r\n    }\r\n};\r\n\r\n</script>\r\n  \r\n<style scoped>\r\n.filter {\r\n    text-align: right;\r\n    margin: 5px;\r\n    justify-content: right;\r\n    margin-right: 0px;\r\n}\r\n\r\n.allDataDiv {\r\n    padding: auto;\r\n    width: 100%;\r\n    height: 410px;\r\n    overflow: scroll;\r\n}\r\n\r\n.table {\r\n    width: 1275px;\r\n}\r\n\r\nthead tr th {\r\n    background-color: lightskyblue;\r\n    font-size: 14px;\r\n}\r\n\r\ntbody tr td {\r\n    font-size: 12px;\r\n}\r\n\r\nthead {\r\n    position: sticky;\r\n    top: 0;\r\n}\r\n\r\n.heading {\r\n    height: 40px;\r\n    background: lightcoral;\r\n    padding-top: 15px;\r\n    margin-bottom: 0px;\r\n}\r\n\r\n.footerDiv {\r\n    width: 100%;\r\n    height: 25px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    background-color: #c9c9c9;\r\n}\r\n\r\n@media (max-width: 767px) {\r\n    .masterDiv {\r\n        margin-left: 1%;\r\n    }\r\n}\r\n</style>"],"mappings":"AA8CA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,MAAK,MAAO,QAAQ;AAE3B,eAAe;EACXC,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,GAAG,EAAE,aAAa;MAClBC,IAAI,EAAE,EAAE;MAERC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MAEZC,MAAM,EAAE,IAAI;MAEZC,YAAY,EAAE,EAAE;MAChBC,cAAc,EAAE;IACpB;EACJ,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACN;IACA,MAAML,SAAQ,GAAIM,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;IAC/DC,OAAO,CAACZ,GAAG,CAAC,cAAc,EAAEE,SAAS,CAAC;IACtC,IAAI,CAACA,SAAQ,GAAIA,SAAS;IAC1B,IAAI,CAACC,QAAO,GAAI,IAAI,CAACD,SAAS,CAAC,CAAC;IAChCU,OAAO,CAACZ,GAAG,CAAC,cAAc,EAAE,IAAI,CAACE,SAAS,EAAE,aAAa,EAAE,IAAI,CAACC,QAAQ,CAAC;IAEzEP,KAAK,CAACiB,GAAG,CAAC,0CAA0C,EAAE;IAClD;IAAA,CACCC,IAAI,CAAEC,QAAQ,IAAK;MAChBH,OAAO,CAACZ,GAAG,CAAC,yBAAyB,EAAEe,QAAQ,CAAC;MAChD,IAAI,CAACd,IAAG,GAAIc,QAAQ,CAAChB,IAAG;MACxB,IAAI,CAACK,MAAK,GAAI,KAAI;MAClB,IAAI,CAACC,YAAW,GAAIU,QAAQ,CAAChB,IAAI,CAACiB,MAAM,CAAChB,GAAE,IAAKA,GAAG,CAACiB,QAAO,KAAM,IAAI,CAACX,cAAc,CAAC;IACzF,CAAC,EACAY,KAAK,CAAEC,KAAK,IAAK;MACd;MACAP,OAAO,CAACZ,GAAG,CAAC,gBAAgB,EAAEmB,KAAK,CAAC;IACxC,CAAC;;IAEL;IACA;IACA;IACA;IACA,IAAI,CAACd,YAAW,GAAI,IAAI,CAACJ,IAAI,CAACe,MAAM,CAAChB,GAAE,IAAKA,GAAG,CAACiB,QAAO,KAAM,IAAI,CAACX,cAAc,CAAC;IACjFM,OAAO,CAACZ,GAAG,CAAC,cAAc,EAAE,IAAI,CAACK,YAAY,CAAC;EAGlD,CAAC;EAED;EACAe,QAAQ,EAAE;IACN;IACA;IACA;IACA;IACA;IACA;EAAA,CACH;EAEDC,OAAO,EAAE;IACLC,UAAUA,CAACC,IAAI,EAAE;MACb,OAAO1B,MAAM,CAAC0B,IAAI,CAAC,CAACC,MAAM,CAAC,wBAAwB,CAAC;IACxD;EAEJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}