{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0517193e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container-fluid\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"heading row\"\n}, [/*#__PURE__*/_createElementVNode(\"h3\", null, \"Common-Logs\")], -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"filter\"\n};\nconst _hoisted_4 = [\"value\"];\nconst _hoisted_5 = {\n  class: \"allDataDiv\",\n  style: {}\n};\nconst _hoisted_6 = {\n  class: \"table table-hover\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"LogID\"), /*#__PURE__*/_createCommentVNode(\" <th scope=\\\"col\\\">Task Type</th>\\r\\n                        <th scope=\\\"col\\\">Task Name</th> \"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"LAST START TIME\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"NEXT RUN TIME\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"EXECUTION STATUS\")])], -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"footerDiv mt-1\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_spinner = _resolveComponent(\"spinner\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [$data.loader ? (_openBlock(), _createBlock(_component_spinner, {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createTextVNode(\"Task Name \"), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.taskName = $event),\n    onChange: _cache[1] || (_cache[1] = $event => $options.filter()),\n    style: {\n      \"width\": \"100px\"\n    }\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.taskNames, taskName => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: taskName,\n      value: taskName\n    }, _toDisplayString(taskName), 9 /* TEXT, PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $data.taskName]])]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"table\", _hoisted_6, [_hoisted_7, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.filteredData, data => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: data.jobName\n    }, [_createElementVNode(\"td\", null, _toDisplayString(data.logID), 1 /* TEXT */), _createCommentVNode(\" <td>{{ data.taskType }}</td>\\r\\n                        <td>{{ data.taskName }}</td> \"), _createElementVNode(\"td\", null, _toDisplayString($options.dateFormat(data.startTime)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.dateFormat(data.nextStartTime)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(data.executionStatus), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => _ctx.$router.back()),\n    class: \"btn btn-secondary btn-sm\"\n  }, \"Back\")])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","style","scope","_createCommentVNode","$data","loader","_createBlock","_component_spinner","key","_hoisted_1","_hoisted_2","_hoisted_3","taskName","$event","onChange","_cache","$options","filter","_createElementBlock","_Fragment","_renderList","taskNames","value","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","filteredData","data","jobName","_toDisplayString","logID","dateFormat","startTime","nextStartTime","executionStatus","_hoisted_8","onClick","_ctx","$router","back"],"sources":["C:\\Users\\admin\\Documents\\Files\\FrontEnd-Development\\schedulerfrontend\\src\\components\\Scheduler\\commonLogs.vue"],"sourcesContent":["<template>\r\n    <spinner v-if=\"loader\"></spinner>\r\n\r\n    <div class=\"container-fluid\">\r\n        <div class=\"heading row\">\r\n            <h3>Common-Logs</h3>\r\n        </div>\r\n\r\n        <div class=\"filter\">Task Name\r\n            <select v-model=\"taskName\" @change=\"filter()\" style=\"width: 100px;\">\r\n                <option v-for=\"taskName in taskNames\" :key=\"taskName\" :value=\"taskName\">{{ taskName }}</option>\r\n            </select>\r\n        </div>\r\n\r\n        <div class=\"allDataDiv\" style=\"\">\r\n            <table class=\"table table-hover\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">LogID</th>\r\n                        <!-- <th scope=\"col\">Task Type</th>\r\n                        <th scope=\"col\">Task Name</th> -->\r\n                        <th scope=\"col\">LAST START TIME</th>\r\n                        <th scope=\"col\">NEXT RUN TIME</th>\r\n                        <th scope=\"col\">EXECUTION STATUS</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr v-for=\"data in (filteredData)\" :key=\"data.jobName\">\r\n                        <td>{{ data.logID }}</td>\r\n                        <!-- <td>{{ data.taskType }}</td>\r\n                        <td>{{ data.taskName }}</td> -->\r\n                        <td>{{ dateFormat(data.startTime) }}</td>\r\n                        <td>{{ dateFormat(data.nextStartTime) }}</td>\r\n                        <td>{{ data.executionStatus }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n        <div class=\"footerDiv mt-1\">\r\n            <button @click=\"$router.back()\" class=\"btn btn-secondary btn-sm\">Back</button>\r\n        </div>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport spinner from '../Scheduler/spinner.vue'\r\n\r\nexport default {\r\n    name: \"commonLogs\",\r\n    components: {\r\n        spinner\r\n    },\r\n    data() {\r\n        return {\r\n            log: 'Common-Logs',\r\n            logs: [],\r\n\r\n            taskNames: [],\r\n            taskName: '',\r\n\r\n            loader: true,\r\n\r\n            filteredData: [],\r\n\r\n            ip: 'localhost'\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n        // Get list of item\r\n        const taskNames = JSON.parse(localStorage.getItem('taskNames'));\r\n        console.log('Task Names: ', taskNames);\r\n        this.taskNames = taskNames;\r\n        this.taskName = this.taskNames[0]\r\n        console.log('Task Names: ', this.taskNames, 'task name: ', this.taskName);\r\n\r\n        axios.get('http://'+this.ip+':8081/BitsFlow-App/logs/getCommonLogs') // bitsflow-intg\r\n        // axios.get('http://localhost:8082/logs/getCommonLogs') // Dynamic-Cron\r\n            .then((response) => {\r\n                console.log(\"Response form Backend: \", response);\r\n                this.logs = response.data\r\n                this.loader = false\r\n\r\n                // Filter on start according to taskType\r\n                this.filteredData = [];\r\n                const taskType = localStorage.getItem('taskType');\r\n                for (const log of this.logs) {\r\n                    if (log.taskType === taskType) {\r\n                        this.filteredData.push(log);\r\n                    }\r\n                }\r\n                this.filter();\r\n                console.log('filteredData', this.filteredData[0]);\r\n            })\r\n            .catch((error) => {\r\n                // Handle the error\r\n                console.log(\"Error Occured!\", error);\r\n            })\r\n    },\r\n\r\n    methods: {\r\n        dateFormat(date) {\r\n            return moment(date).format('Do MMM YYYY, h:mm:ss a');\r\n        },\r\n\r\n        filter() {\r\n            this.filteredData = [];\r\n            for (const log of this.logs) {\r\n                if (log.taskName === this.taskName) {\r\n                    this.filteredData.push(log);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n</script>\r\n  \r\n<style scoped>\r\n.filter {\r\n    text-align: right;\r\n    margin: 5px;\r\n    justify-content: right;\r\n    margin-right: 0px;\r\n}\r\n\r\n.allDataDiv {\r\n    padding: auto;\r\n    width: 100%;\r\n    height: 410px;\r\n    overflow: scroll;\r\n}\r\n\r\n.table {\r\n    width: 1275px;\r\n}\r\n\r\nthead tr th {\r\n    background-color: lightskyblue;\r\n    font-size: 14px;\r\n}\r\n\r\ntbody tr td {\r\n    font-size: 12px;\r\n}\r\n\r\nthead {\r\n    position: sticky;\r\n    top: 0;\r\n}\r\n\r\n.heading {\r\n    height: 45px;\r\n    background: lightcoral;\r\n    padding-top: 10px;\r\n}\r\n\r\n.footerDiv {\r\n    width: 100%;\r\n    height: 30px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    background-color: #c9c9c9;\r\n}\r\n\r\n@media (max-width: 767px) {\r\n    .masterDiv {\r\n        margin-left: 1%;\r\n    }\r\n}\r\n</style>"],"mappings":";;;EAGSA,KAAK,EAAC;AAAiB;gEACxBC,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAa,I,aACpBC,mBAAA,CAAoB,YAAhB,aAAW,E;;EAGdD,KAAK,EAAC;AAAQ;;;EAMdA,KAAK,EAAC,YAAY;EAACE,KAAQ,EAAR;;;EACbF,KAAK,EAAC;AAAmB;gEAC5BC,mBAAA,CASQ,gB,aARJA,mBAAA,CAOK,a,aANDA,mBAAA,CAA0B;EAAtBE,KAAK,EAAC;AAAK,GAAC,OAAK,G,aACrBC,mBAAA,kGACkC,E,aAClCH,mBAAA,CAAoC;EAAhCE,KAAK,EAAC;AAAK,GAAC,iBAAe,G,aAC/BF,mBAAA,CAAkC;EAA9BE,KAAK,EAAC;AAAK,GAAC,eAAa,G,aAC7BF,mBAAA,CAAqC;EAAjCE,KAAK,EAAC;AAAK,GAAC,kBAAgB,E;;EAgB3CH,KAAK,EAAC;AAAgB;;;6DAtChBK,KAAA,CAAAC,MAAM,I,cAArBC,YAAA,CAAiCC,kBAAA;IAAAC,GAAA;EAAA,M,mCAEjCR,mBAAA,CAuCM,OAvCNS,UAuCM,GAtCFC,UAEM,EAENV,mBAAA,CAIM,OAJNW,UAIM,G,iBAJc,YAChB,G,gBAAAX,mBAAA,CAES;+DAFQI,KAAA,CAAAQ,QAAQ,GAAAC,MAAA;IAAGC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAF,MAAA,IAAEG,QAAA,CAAAC,MAAM;IAAIhB,KAAqB,EAArB;MAAA;IAAA;yBAC1CiB,mBAAA,CAA+FC,SAAA,QAAAC,WAAA,CAApEhB,KAAA,CAAAiB,SAAS,EAArBT,QAAQ;yBAAvBM,mBAAA,CAA+F;MAAxDV,GAAG,EAAEI,QAAQ;MAAGU,KAAK,EAAEV;wBAAaA,QAAQ,wBAAAW,UAAA;2FADtEnB,KAAA,CAAAQ,QAAQ,E,KAK7BZ,mBAAA,CAuBM,OAvBNwB,UAuBM,GAtBFxB,mBAAA,CAqBQ,SArBRyB,UAqBQ,GApBJC,UASQ,EACR1B,mBAAA,CASQ,iB,kBARJkB,mBAAA,CAOKC,SAAA,QAAAC,WAAA,CAPehB,KAAA,CAAAuB,YAAY,EAArBC,IAAI;yBAAfV,mBAAA,CAOK;MAP+BV,GAAG,EAAEoB,IAAI,CAACC;QAC1C7B,mBAAA,CAAyB,YAAA8B,gBAAA,CAAlBF,IAAI,CAACG,KAAK,kBACjB5B,mBAAA,0FACgC,EAChCH,mBAAA,CAAyC,YAAA8B,gBAAA,CAAlCd,QAAA,CAAAgB,UAAU,CAACJ,IAAI,CAACK,SAAS,mBAChCjC,mBAAA,CAA6C,YAAA8B,gBAAA,CAAtCd,QAAA,CAAAgB,UAAU,CAACJ,IAAI,CAACM,aAAa,mBACpClC,mBAAA,CAAmC,YAAA8B,gBAAA,CAA5BF,IAAI,CAACO,eAAe,iB;wCAM3CnC,mBAAA,CAEM,OAFNoC,UAEM,GADFpC,mBAAA,CAA8E;IAArEqC,OAAK,EAAAtB,MAAA,QAAAA,MAAA,MAAAF,MAAA,IAAEyB,IAAA,CAAAC,OAAO,CAACC,IAAI;IAAIzC,KAAK,EAAC;KAA2B,MAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}