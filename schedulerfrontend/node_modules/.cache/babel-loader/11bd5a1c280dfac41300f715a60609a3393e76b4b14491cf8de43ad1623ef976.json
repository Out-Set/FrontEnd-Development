{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-f8885a26\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  style: {\n    \"background\": \"grey\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"allDataDiv\",\n  style: {}\n};\nconst _hoisted_3 = {\n  class: \"table table-striped\",\n  style: {\n    \"width\": \"1275px\"\n  }\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"LogID\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"LAST START TIME\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"NEXT RUN TIME\"), /*#__PURE__*/_createCommentVNode(\" <th scope=\\\"col\\\">LAST RUN DURATION</th> \")])], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"h2\", _hoisted_1, _toDisplayString($data.log), 1 /* TEXT */), _createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.logs, data => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: data.jobName\n    }, [_createElementVNode(\"td\", null, _toDisplayString(data.logID), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.dateFormat(data.startTime)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.dateFormat(data.nextStartTime)), 1 /* TEXT */), _createCommentVNode(\" <td>{{ data.lastRunDuration }}</td> \")]);\n  }), 128 /* KEYED_FRAGMENT */))])])]), _createCommentVNode(\" <button v-on:click=\\\"getLogs()\\\">Click</button> \"), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$router.back()),\n    class: \"btn btn-secondary btn-sm mb-\"\n  }, \"Back\")])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["style","class","_createElementVNode","scope","_createCommentVNode","_hoisted_1","_toDisplayString","$data","log","_hoisted_2","_hoisted_3","_hoisted_4","_createElementBlock","_Fragment","_renderList","logs","data","key","jobName","logID","$options","dateFormat","startTime","nextStartTime","onClick","_cache","$event","_ctx","$router","back"],"sources":["C:\\Users\\admin\\Desktop\\Working On\\FrontEnd-Development\\schedulerfrontend\\src\\components\\cronLogs.vue"],"sourcesContent":["<template>\r\n  <h2 style=\"background: grey;\">{{ log }}</h2>\r\n  <div>\r\n    <div class=\"allDataDiv\" style=\"\">\r\n      <table class=\"table table-striped\" style=\"width: 1275px;\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">LogID</th>\r\n            <th scope=\"col\">LAST START TIME</th>\r\n            <th scope=\"col\">NEXT RUN TIME</th>\r\n            <!-- <th scope=\"col\">LAST RUN DURATION</th> -->\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"data in (logs)\" :key=\"data.jobName\">\r\n            <td>{{ data.logID }}</td>\r\n            <td> {{ dateFormat(data.startTime) }} </td>\r\n            <td>{{ dateFormat(data.nextStartTime) }}</td>\r\n            <!-- <td>{{ data.lastRunDuration }}</td> -->\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <!-- <button v-on:click=\"getLogs()\">Click</button> -->\r\n    <button @click=\"$router.back()\" class=\"btn btn-secondary btn-sm mb-\">Back</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nexport default {\r\n  name: \"cronLogs\",\r\n  data() {\r\n    return {\r\n      log: 'Cron-Logs',\r\n      logs: []\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    axios.get('http://localhost:8081/dynamicSchedule/getLogs')\r\n      .then((response) => {\r\n        console.log(\"Response form Backend: \", response);\r\n        this.logs = response.data\r\n      })\r\n      .catch((error) => {\r\n        // Handle the error\r\n        console.log(\"Error Occured!\", error);\r\n      })\r\n  },\r\n\r\n  methods: {\r\n    dateFormat(date) {\r\n      return moment(date).format('Do MMM YYYY, h:mm:ss a');\r\n    },\r\n\r\n  }\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.allDataDiv {\r\n  width: 100%;\r\n  height: 410px;\r\n  overflow: scroll;\r\n}\r\n\r\nthead tr th {\r\n  background-color: lightskyblue;\r\n  font-size: 14px;\r\n}\r\n\r\ntbody tr td {\r\n  font-size: 12px;\r\n}\r\n\r\nthead {\r\n  position: sticky;\r\n  top: 0;\r\n}\r\n</style>"],"mappings":";;;EACMA,KAAyB,EAAzB;IAAA;EAAA;AAAyB;;EAEtBC,KAAK,EAAC,YAAY;EAACD,KAAQ,EAAR;;;EACfC,KAAK,EAAC,qBAAqB;EAACD,KAAsB,EAAtB;IAAA;EAAA;;gEACjCE,mBAAA,CAOQ,gB,aANNA,mBAAA,CAKK,a,aAJHA,mBAAA,CAA0B;EAAtBC,KAAK,EAAC;AAAK,GAAC,OAAK,G,aACrBD,mBAAA,CAAoC;EAAhCC,KAAK,EAAC;AAAK,GAAC,iBAAe,G,aAC/BD,mBAAA,CAAkC;EAA9BC,KAAK,EAAC;AAAK,GAAC,eAAa,G,aAC7BC,mBAAA,8CAA+C,C;;;6DATzDF,mBAAA,CAA4C,MAA5CG,UAA4C,EAAAC,gBAAA,CAAXC,KAAA,CAAAC,GAAG,kBACpCN,mBAAA,CAwBM,cAvBJA,mBAAA,CAmBM,OAnBNO,UAmBM,GAlBJP,mBAAA,CAiBQ,SAjBRQ,UAiBQ,GAhBNC,UAOQ,EACRT,mBAAA,CAOQ,iB,kBANNU,mBAAA,CAKKC,SAAA,QAAAC,WAAA,CALeP,KAAA,CAAAQ,IAAI,EAAbC,IAAI;yBAAfJ,mBAAA,CAKK;MALuBK,GAAG,EAAED,IAAI,CAACE;QACpChB,mBAAA,CAAyB,YAAAI,gBAAA,CAAlBU,IAAI,CAACG,KAAK,kBACjBjB,mBAAA,CAA2C,YAAAI,gBAAA,CAAnCc,QAAA,CAAAC,UAAU,CAACL,IAAI,CAACM,SAAS,mBACjCpB,mBAAA,CAA6C,YAAAI,gBAAA,CAAtCc,QAAA,CAAAC,UAAU,CAACL,IAAI,CAACO,aAAa,mBACpCnB,mBAAA,yCAA4C,C;wCAMpDA,mBAAA,qDAAsD,EACtDF,mBAAA,CAAkF;IAAzEsB,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,OAAO,CAACC,IAAI;IAAI5B,KAAK,EAAC;KAA+B,MAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}